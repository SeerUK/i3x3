// Code generated by protoc-gen-go. DO NOT EDIT.
// source: i3x3d.proto

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	i3x3d.proto

It has these top-level messages:
	MoveWorkspaceRequest
	MoveWorkspaceResponse
	SwitchWorkspaceRequest
	SwitchWorkspaceResponse
	RedistributeWorkspacesRequest
	RedistributeWorkspacesResponse
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type Direction int32

const (
	Direction_UP    Direction = 0
	Direction_DOWN  Direction = 1
	Direction_LEFT  Direction = 2
	Direction_RIGHT Direction = 3
)

var Direction_name = map[int32]string{
	0: "UP",
	1: "DOWN",
	2: "LEFT",
	3: "RIGHT",
}
var Direction_value = map[string]int32{
	"UP":    0,
	"DOWN":  1,
	"LEFT":  2,
	"RIGHT": 3,
}

func (x Direction) String() string {
	return proto1.EnumName(Direction_name, int32(x))
}
func (Direction) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type MoveWorkspaceRequest struct {
	Direction Direction `protobuf:"varint,1,opt,name=direction,enum=proto.Direction" json:"direction,omitempty"`
}

func (m *MoveWorkspaceRequest) Reset()                    { *m = MoveWorkspaceRequest{} }
func (m *MoveWorkspaceRequest) String() string            { return proto1.CompactTextString(m) }
func (*MoveWorkspaceRequest) ProtoMessage()               {}
func (*MoveWorkspaceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *MoveWorkspaceRequest) GetDirection() Direction {
	if m != nil {
		return m.Direction
	}
	return Direction_UP
}

type MoveWorkspaceResponse struct {
	Success bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
}

func (m *MoveWorkspaceResponse) Reset()                    { *m = MoveWorkspaceResponse{} }
func (m *MoveWorkspaceResponse) String() string            { return proto1.CompactTextString(m) }
func (*MoveWorkspaceResponse) ProtoMessage()               {}
func (*MoveWorkspaceResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *MoveWorkspaceResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type SwitchWorkspaceRequest struct {
	Direction Direction `protobuf:"varint,1,opt,name=direction,enum=proto.Direction" json:"direction,omitempty"`
}

func (m *SwitchWorkspaceRequest) Reset()                    { *m = SwitchWorkspaceRequest{} }
func (m *SwitchWorkspaceRequest) String() string            { return proto1.CompactTextString(m) }
func (*SwitchWorkspaceRequest) ProtoMessage()               {}
func (*SwitchWorkspaceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *SwitchWorkspaceRequest) GetDirection() Direction {
	if m != nil {
		return m.Direction
	}
	return Direction_UP
}

type SwitchWorkspaceResponse struct {
	Success bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
}

func (m *SwitchWorkspaceResponse) Reset()                    { *m = SwitchWorkspaceResponse{} }
func (m *SwitchWorkspaceResponse) String() string            { return proto1.CompactTextString(m) }
func (*SwitchWorkspaceResponse) ProtoMessage()               {}
func (*SwitchWorkspaceResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *SwitchWorkspaceResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type RedistributeWorkspacesRequest struct {
}

func (m *RedistributeWorkspacesRequest) Reset()                    { *m = RedistributeWorkspacesRequest{} }
func (m *RedistributeWorkspacesRequest) String() string            { return proto1.CompactTextString(m) }
func (*RedistributeWorkspacesRequest) ProtoMessage()               {}
func (*RedistributeWorkspacesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type RedistributeWorkspacesResponse struct {
}

func (m *RedistributeWorkspacesResponse) Reset()                    { *m = RedistributeWorkspacesResponse{} }
func (m *RedistributeWorkspacesResponse) String() string            { return proto1.CompactTextString(m) }
func (*RedistributeWorkspacesResponse) ProtoMessage()               {}
func (*RedistributeWorkspacesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func init() {
	proto1.RegisterType((*MoveWorkspaceRequest)(nil), "proto.MoveWorkspaceRequest")
	proto1.RegisterType((*MoveWorkspaceResponse)(nil), "proto.MoveWorkspaceResponse")
	proto1.RegisterType((*SwitchWorkspaceRequest)(nil), "proto.SwitchWorkspaceRequest")
	proto1.RegisterType((*SwitchWorkspaceResponse)(nil), "proto.SwitchWorkspaceResponse")
	proto1.RegisterType((*RedistributeWorkspacesRequest)(nil), "proto.RedistributeWorkspacesRequest")
	proto1.RegisterType((*RedistributeWorkspacesResponse)(nil), "proto.RedistributeWorkspacesResponse")
	proto1.RegisterEnum("proto.Direction", Direction_name, Direction_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Workspace service

type WorkspaceClient interface {
	MoveWorkspace(ctx context.Context, in *MoveWorkspaceRequest, opts ...grpc.CallOption) (*MoveWorkspaceResponse, error)
	SwitchWorkspace(ctx context.Context, in *SwitchWorkspaceRequest, opts ...grpc.CallOption) (*SwitchWorkspaceResponse, error)
	RedistributeWorkspaces(ctx context.Context, in *RedistributeWorkspacesRequest, opts ...grpc.CallOption) (*RedistributeWorkspacesResponse, error)
}

type workspaceClient struct {
	cc *grpc.ClientConn
}

func NewWorkspaceClient(cc *grpc.ClientConn) WorkspaceClient {
	return &workspaceClient{cc}
}

func (c *workspaceClient) MoveWorkspace(ctx context.Context, in *MoveWorkspaceRequest, opts ...grpc.CallOption) (*MoveWorkspaceResponse, error) {
	out := new(MoveWorkspaceResponse)
	err := grpc.Invoke(ctx, "/proto.Workspace/MoveWorkspace", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workspaceClient) SwitchWorkspace(ctx context.Context, in *SwitchWorkspaceRequest, opts ...grpc.CallOption) (*SwitchWorkspaceResponse, error) {
	out := new(SwitchWorkspaceResponse)
	err := grpc.Invoke(ctx, "/proto.Workspace/SwitchWorkspace", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workspaceClient) RedistributeWorkspaces(ctx context.Context, in *RedistributeWorkspacesRequest, opts ...grpc.CallOption) (*RedistributeWorkspacesResponse, error) {
	out := new(RedistributeWorkspacesResponse)
	err := grpc.Invoke(ctx, "/proto.Workspace/RedistributeWorkspaces", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Workspace service

type WorkspaceServer interface {
	MoveWorkspace(context.Context, *MoveWorkspaceRequest) (*MoveWorkspaceResponse, error)
	SwitchWorkspace(context.Context, *SwitchWorkspaceRequest) (*SwitchWorkspaceResponse, error)
	RedistributeWorkspaces(context.Context, *RedistributeWorkspacesRequest) (*RedistributeWorkspacesResponse, error)
}

func RegisterWorkspaceServer(s *grpc.Server, srv WorkspaceServer) {
	s.RegisterService(&_Workspace_serviceDesc, srv)
}

func _Workspace_MoveWorkspace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MoveWorkspaceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkspaceServer).MoveWorkspace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Workspace/MoveWorkspace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkspaceServer).MoveWorkspace(ctx, req.(*MoveWorkspaceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Workspace_SwitchWorkspace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SwitchWorkspaceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkspaceServer).SwitchWorkspace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Workspace/SwitchWorkspace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkspaceServer).SwitchWorkspace(ctx, req.(*SwitchWorkspaceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Workspace_RedistributeWorkspaces_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RedistributeWorkspacesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkspaceServer).RedistributeWorkspaces(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Workspace/RedistributeWorkspaces",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkspaceServer).RedistributeWorkspaces(ctx, req.(*RedistributeWorkspacesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Workspace_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Workspace",
	HandlerType: (*WorkspaceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "MoveWorkspace",
			Handler:    _Workspace_MoveWorkspace_Handler,
		},
		{
			MethodName: "SwitchWorkspace",
			Handler:    _Workspace_SwitchWorkspace_Handler,
		},
		{
			MethodName: "RedistributeWorkspaces",
			Handler:    _Workspace_RedistributeWorkspaces_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "i3x3d.proto",
}

func init() { proto1.RegisterFile("i3x3d.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 284 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xce, 0x34, 0xae, 0x30,
	0x4e, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x4a, 0x6e, 0x5c, 0x22, 0xbe,
	0xf9, 0x65, 0xa9, 0xe1, 0xf9, 0x45, 0xd9, 0xc5, 0x05, 0x89, 0xc9, 0xa9, 0x41, 0xa9, 0x85, 0xa5,
	0xa9, 0xc5, 0x25, 0x42, 0x7a, 0x5c, 0x9c, 0x29, 0x99, 0x45, 0xa9, 0xc9, 0x25, 0x99, 0xf9, 0x79,
	0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x7c, 0x46, 0x02, 0x10, 0x9d, 0x7a, 0x2e, 0x30, 0xf1, 0x20, 0x84,
	0x12, 0x25, 0x43, 0x2e, 0x51, 0x34, 0x73, 0x8a, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0x85, 0x24, 0xb8,
	0xd8, 0x8b, 0x4b, 0x93, 0x93, 0x53, 0x8b, 0x8b, 0xc1, 0xc6, 0x70, 0x04, 0xc1, 0xb8, 0x4a, 0x1e,
	0x5c, 0x62, 0xc1, 0xe5, 0x99, 0x25, 0xc9, 0x19, 0x14, 0x5b, 0x6e, 0xcc, 0x25, 0x8e, 0x61, 0x12,
	0x41, 0xeb, 0xe5, 0xb9, 0x64, 0x83, 0x52, 0x53, 0x32, 0x8b, 0x4b, 0x8a, 0x32, 0x93, 0x4a, 0x4b,
	0x10, 0x2e, 0x2f, 0x86, 0xba, 0x42, 0x49, 0x81, 0x4b, 0x0e, 0x97, 0x02, 0x88, 0xe1, 0x5a, 0x46,
	0x5c, 0x9c, 0x70, 0xf7, 0x08, 0xb1, 0x71, 0x31, 0x85, 0x06, 0x08, 0x30, 0x08, 0x71, 0x70, 0xb1,
	0xb8, 0xf8, 0x87, 0xfb, 0x09, 0x30, 0x82, 0x58, 0x3e, 0xae, 0x6e, 0x21, 0x02, 0x4c, 0x42, 0x9c,
	0x5c, 0xac, 0x41, 0x9e, 0xee, 0x1e, 0x21, 0x02, 0xcc, 0x46, 0x13, 0x98, 0xb8, 0x38, 0xe1, 0x46,
	0x09, 0x79, 0x71, 0xf1, 0xa2, 0x04, 0x9b, 0x90, 0x34, 0xd4, 0x9f, 0xd8, 0x22, 0x45, 0x4a, 0x06,
	0xbb, 0x24, 0xd4, 0xab, 0x01, 0x5c, 0xfc, 0x68, 0xa1, 0x20, 0x24, 0x0b, 0xd5, 0x80, 0x3d, 0x9c,
	0xa5, 0xe4, 0x70, 0x49, 0x43, 0x4d, 0x4c, 0xe5, 0x12, 0xc3, 0x1e, 0x02, 0x42, 0x2a, 0x50, 0x9d,
	0x78, 0x43, 0x50, 0x4a, 0x95, 0x80, 0x2a, 0x88, 0x35, 0x49, 0x6c, 0x60, 0x55, 0xc6, 0x80, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x71, 0xed, 0x38, 0x34, 0xa0, 0x02, 0x00, 0x00,
}
